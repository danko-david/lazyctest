
- First working version:
//	- "import" the "so" files specified in the CLI
//	- discover loaded test functions and invoke them properly
//	- fork the process and run individual tests.
//	- read back test result through SHM.

//	- print test results

//	- provide assertion functions for the clients
//	- provide expectation setting functions for the client
//		(eg.: shoud exit with status 15, set_timeout, should result sigseg, etc)
		- set timeout

- features:
	- run with valgrind
	- verbosity: mandantory (no -v) to trace (-vvvv)
	- redirect stdio to buffer or file (if bigger than specified bytes)

- Test discovery:
	- discover static C++ test by signature

- failure protection:
	- check verify signature of the shared memory
	- close unrelated SHM segments before run tests.

- testing the tester:
	- find a testing method (eg. golden output)
	- include some test

- CLI:
//	- installable program
	- parse CLI options
	- print proper help when unknown or bad CLI argument present
	- specify test or test set (regex match or exact list) to run

- test result publish:
//	- print out all test result after end
	- find a standard test result publishing format and implement output writer
//		- JUNIT output (stdout)
		Guidlines: must be integratable eg: into jenkins

- demonstration
	- use the tester for the library used by this project

- library:
	- externalize utility units
